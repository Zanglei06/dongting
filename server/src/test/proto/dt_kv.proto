/*
 * Copyright The Dongting Project
 *
 * The Dongting Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
syntax = "proto3";
option java_package = "com.github.dtprj.dongting.config";
message KvNode {
  fixed64 create_index = 1;
  fixed64 create_time = 2;
  fixed64 update_index = 3;
  fixed64 update_time = 4;
  bytes value = 15;
}

message KvResult {
  int32 biz_code = 1;
  KvNode node = 2;
  string key_in_dir = 3;
}

message KvReq {
  int32 group_id = 1;
  string key = 2;
  bytes value = 3;
  int32 keys_size = 4;
  repeated string keys = 5[packed = false];
  int32 values_size = 6;
  repeated bytes values = 7[packed = false];
  bytes expect_value = 8; // used for cas operation
}

message KvResp {
  fixed64 raft_index = 1;
  int32 results_size = 2;
  repeated KvResult results = 3[packed = false];
}

message WatchReq {
  int32 group_id = 1;
  int32 operation = 2; // 0: add watch, 1: remove watch, 2 sync all keys
  int32 keys_size = 3;
  repeated fixed64 known_raft_index = 4[packed = false];
  repeated string keys = 5[packed = false];
}

// return EmptyBodyRespFrame

message WatchNotifyPushReq {
  int32 group_id = 1;
  repeated WatchNotify notify_list = 2[packed = false];
}

message WatchNotify {
  fixed64 raft_index = 1;
  int32 state = 2; // 0: not exist, 1: value exist, 2: directory exist
  string key = 3;
  bytes value = 4;
}

message WatchNotifyPushResp {
  repeated int32 results = 1[packed = false];
}